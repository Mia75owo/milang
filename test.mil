fn putchar(char: i32) -> (i32);
fn puts(str: i64) -> (i32);
fn printf(str: i64, arg: i64) -> (i32);
fn getchar() -> (i32);
fn exit(code: i32) -> (i32);

putchar(foo())
putchar('\n')

fn foo() -> (i8) {
  fn baa() -> (i8) {
    fn baz() -> (i8) {
      return 'O'
    }
    return baz()
  }
  return baa()
}

fn say_hi() -> (i32) {
  putchar('H')
  putchar('i')
  putchar('i')
  putchar('i')
  putchar('\n')

  return 0
}

say_hi()

fn say_hi_str() -> (i32) {
  puts("Hiii :>")
  puts("How are you?")
  puts("Look at this cool escaped stuff: \" \\ \n \r \"")
  return 0
}

say_hi_str()

user_input: i8 = 0

if user_input == 'y' {
  puts("Yes :>")
  0
} else {
  puts("No :<")
  0
}

printf("%li\n", &a)

hi: [i32; 1] = @i32[]
putchar(hi)

putchar('\n')

return 0
